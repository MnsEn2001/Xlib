local Xlib = {}

function Xlib:MakeWindow(settings)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "Xlib_Gui"
    ScreenGui.Parent = game:GetService("CoreGui")
    
    -- Create a frame for the window
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = settings.Name or "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Visible = true
    
    -- Make the frame adjustable to screen size
    local function adjustSize()
        local screenWidth, screenHeight = game:GetService("Workspace").CurrentCamera.ViewportSize.X, game:GetService("Workspace").CurrentCamera.ViewportSize.Y
        MainFrame.Size = UDim2.new(0, math.min(screenWidth * 0.6, 800), 0, math.min(screenHeight * 0.6, 600))
    end
    
    adjustSize()
    game:GetService("Workspace").CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(adjustSize)
    
    -- Container for left-side tabs
    local Sidebar = Instance.new("Frame")
    Sidebar.Name = "Sidebar"
    Sidebar.Parent = MainFrame
    Sidebar.Size = UDim2.new(0.2, 0, 1, 0)
    Sidebar.Position = UDim2.new(0, 0, 0, 0)
    Sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Sidebar.BorderSizePixel = 0
    
    -- Add the title to the sidebar
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = Sidebar
    Title.Size = UDim2.new(1, 0, 0.1, 0)
    Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Title.BorderSizePixel = 0
    Title.Text = settings.Name or "Title of the library"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextScaled = true

    -- Add a separator line below the title
    local TitleSeparator = Instance.new("Frame")
    TitleSeparator.Name = "TitleSeparator"
    TitleSeparator.Parent = Sidebar
    TitleSeparator.Size = UDim2.new(1, 0, 0, 1)
    TitleSeparator.Position = UDim2.new(0, 0, 0.1, 0)
    TitleSeparator.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    
    -- Add a UIListLayout to organize left-side tabs vertically
    local SidebarLayout = Instance.new("UIListLayout")
    SidebarLayout.Parent = Sidebar
    SidebarLayout.FillDirection = Enum.FillDirection.Vertical
    SidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    SidebarLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    SidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Container for tab headers
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = MainFrame
    TabContainer.Size = UDim2.new(0.8, 0, 0.1, 0)
    TabContainer.Position = UDim2.new(0.2, 0, 0, 0)
    TabContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabContainer.BorderSizePixel = 0
    
    -- Add a separator line below the tab headers
    local TabSeparator = Instance.new("Frame")
    TabSeparator.Name = "TabSeparator"
    TabSeparator.Parent = MainFrame
    TabSeparator.Size = UDim2.new(0.8, 0, 0, 1)
    TabSeparator.Position = UDim2.new(0.2, 0, 0.1, 0)
    TabSeparator.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    
    -- Add a UIListLayout to organize tabs horizontally
    local TabLayout = Instance.new("UIListLayout")
    TabLayout.Parent = TabContainer
    TabLayout.FillDirection = Enum.FillDirection.Horizontal
    TabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    TabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    TabLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Container for tab content
    local TabContent = Instance.new("Frame")
    TabContent.Name = "TabContent"
    TabContent.Parent = MainFrame
    TabContent.Size = UDim2.new(0.8, 0, 0.9, 0)
    TabContent.Position = UDim2.new(0.2, 0, 0.1, 0)
    TabContent.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TabContent.BorderSizePixel = 0
    
    -- Tabs table to store the tab content frames
    local Tabs = {}
    
    -- Add minimize and close buttons
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Name = "MinimizeButton"
    MinimizeButton.Parent = MainFrame
    MinimizeButton.Size = UDim2.new(0, 120, 1, 0) -- Match TabHead size
    MinimizeButton.Position = UDim2.new(0.8, 0, 0, 0) -- Positioned at the right of the window
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.TextScaled = true
    MinimizeButton.TextSize = 24
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = MainFrame
    CloseButton.Size = UDim2.new(0, 120, 1, 0) -- Match TabHead size
    CloseButton.Position = UDim2.new(0.8, 120, 0, 0) -- Positioned next to MinimizeButton
    CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextScaled = true
    CloseButton.TextSize = 24

    -- Minimize functionality
    local isMinimized = false
    local function toggleMinimize()
        isMinimized = not isMinimized
        if isMinimized then
            MainFrame.Size = UDim2.new(0, 60, 0, 60) -- Mini icon size
            MinimizeButton.Visible = false
            CloseButton.Visible = false
            
            -- Create mini icon
            local MiniIcon = Instance.new("TextButton")
            MiniIcon.Name = "MiniIcon"
            MiniIcon.Parent = ScreenGui
            MiniIcon.Size = UDim2.new(0, 60, 0, 60)
            MiniIcon.Position = UDim2.new(0, 0, 0.1, 0)
            MiniIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            MiniIcon.BorderSizePixel = 0
            MiniIcon.Text = settings.Name or "Xlib"
            MiniIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
            MiniIcon.TextScaled = true
            MiniIcon.MouseButton1Click:Connect(function()
                MiniIcon:Destroy()
                MainFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
                MinimizeButton.Visible = true
                CloseButton.Visible = true
                TabContainer.Visible = true
                Sidebar.Visible = true
            end)
        else
            MainFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
            MinimizeButton.Visible = true
            CloseButton.Visible = true
            TabContainer.Visible = true
            Sidebar.Visible = true
        end
    end
    
    MinimizeButton.MouseButton1Click:Connect(toggleMinimize)
    
    -- Close functionality
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)

    -- Function to create a tab head
    function self:MakeTabHead(tabSettings)
        if tabSettings.PremiumOnly and not isPremiumUser() then
            return nil -- Do not create this tab if not a premium user
        end
    
        -- Create the tab head button
        local TabHead = Instance.new("TextButton")
        TabHead.Name = tabSettings.Name or "TabHead"
        TabHead.Parent = TabContainer
        TabHead.Size = UDim2.new(0, 120, 1, 0) -- Slightly larger
        TabHead.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        TabHead.BorderSizePixel = 0
        TabHead.Text = tabSettings.Name or "Tab 1"
        TabHead.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabHead.TextScaled = true
        TabHead.LayoutOrder = #Tabs + 1
    
        -- Create the corresponding tab content frame
        local TabFrame = Instance.new("Frame")
        TabFrame.Name = tabSettings.Name or "TabFrame"
        TabFrame.Parent = TabContent
        TabFrame.Size = UDim2.new(1, 0, 1, 0)
        TabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        TabFrame.BorderSizePixel = 0
        TabFrame.Visible = false
        
        -- Store the tab information
        table.insert(Tabs, {Head = TabHead, Frame = TabFrame})
        
        -- Function to switch to the selected tab
        local function switchTab()
            for _, tab in ipairs(Tabs) do
                tab.Frame.Visible = false
                tab.Head.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            end
            TabFrame.Visible = true
            TabHead.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        end
        
        TabHead.MouseButton1Click:Connect(switchTab)
    
        -- Automatically switch to the first tab
        if #Tabs == 1 then
            switchTab()
        end
    
        return TabHead
    end
    
    -- Function to create a tab in the left-side bar
    function self:MakeTab(tabSettings)
        if tabSettings.PremiumOnly and not isPremiumUser() then
            return nil -- Do not create this tab if not a premium user
        end
    
        -- Create the tab button for the sidebar
        local SidebarTab = Instance.new("TextButton")
        SidebarTab.Name = tabSettings.Name or "SidebarTab"
        SidebarTab.Parent = Sidebar
        SidebarTab.Size = UDim2.new(1, 0, 0, 40) -- Adjust height to match TabHead
        SidebarTab.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        SidebarTab.BorderSizePixel = 0
        SidebarTab.Text = tabSettings.Name or "Tab 1"
        SidebarTab.TextColor3 = Color3.fromRGB(255, 255, 255)
        SidebarTab.TextScaled = true
        SidebarTab.TextSize = 24 -- Adjust text size to match TabHead
        SidebarTab.LayoutOrder = #Tabs + 1
        
        -- Create the corresponding tab content frame
        local SidebarTabFrame = Instance.new("Frame")
        SidebarTabFrame.Name = tabSettings.Name or "SidebarTabFrame"
        SidebarTabFrame.Parent = TabContent
        SidebarTabFrame.Size = UDim2.new(1, 0, 1, 0)
        SidebarTabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        SidebarTabFrame.BorderSizePixel = 0
        SidebarTabFrame.Visible = false
        
        -- Store the tab information
        table.insert(Tabs, {Head = SidebarTab, Frame = SidebarTabFrame})
    
        -- Function to switch to the selected tab
        local function switchTab()
            for _, tab in ipairs(Tabs) do
                tab.Frame.Visible = false
                tab.Head.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            end
            SidebarTabFrame.Visible = true
            SidebarTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        end
        
        SidebarTab.MouseButton1Click:Connect(switchTab)
    
        -- Automatically switch to the first tab
        if #Tabs == 1 then
            switchTab()
        end
    
        return SidebarTab
    end
    return self
end

return Xlib
