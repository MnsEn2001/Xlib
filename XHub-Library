local Xlib = {}

function Xlib:Create(name, nameUnder)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = name .. "_Gui"
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = MainFrame

    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.Text = name
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 18
    TitleLabel.Parent = TitleBar

    local SubTitleLabel = Instance.new("TextLabel")
    SubTitleLabel.Size = UDim2.new(1, -60, 1, 0)
    SubTitleLabel.Position = UDim2.new(0, 10, 0, 25)
    SubTitleLabel.Text = nameUnder
    SubTitleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    SubTitleLabel.BackgroundTransparency = 1
    SubTitleLabel.Font = Enum.Font.Gotham
    SubTitleLabel.TextSize = 14
    SubTitleLabel.Parent = TitleBar

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
    MinimizeButton.Position = UDim2.new(1, -55, 0, 5)
    MinimizeButton.Text = "<"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    MinimizeButton.Parent = TitleBar

    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -30, 0, 5)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.Parent = TitleBar

    local TabFrame = Instance.new("ScrollingFrame")
    TabFrame.Size = UDim2.new(0, 100, 1, -30)
    TabFrame.Position = UDim2.new(0, 0, 0, 30)
    TabFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabFrame.BorderSizePixel = 0
    TabFrame.ScrollBarThickness = 5
    TabFrame.Parent = MainFrame

    local ContentFrame = Instance.new("ScrollingFrame")
    ContentFrame.Size = UDim2.new(1, -100, 1, -30)
    ContentFrame.Position = UDim2.new(0, 100, 0, 30)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ContentFrame.BorderSizePixel = 0
    ContentFrame.ScrollBarThickness = 5
    ContentFrame.Parent = MainFrame

    -- Create minimized icon
    local MinimizedIcon = Instance.new("TextButton")
    MinimizedIcon.Size = UDim2.new(0, 50, 0, 50)
    MinimizedIcon.Position = UDim2.new(0, 10, 0, 10)
    MinimizedIcon.Text = "> XHub <"
    MinimizedIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizedIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MinimizedIcon.Visible = false
    MinimizedIcon.Parent = ScreenGui

    -- Minimize and restore functions
    local function minimizeWindow()
        MainFrame.Visible = false
        MinimizedIcon.Visible = true
    end

    local function restoreWindow()
        MainFrame.Visible = true
        MinimizedIcon.Visible = false
    end

    local function closeWindow()
        ScreenGui:Destroy()
    end

    MinimizeButton.MouseButton1Click:Connect(minimizeWindow)
    MinimizedIcon.MouseButton1Click:Connect(restoreWindow)
    CloseButton.MouseButton1Click:Connect(closeWindow)

    -- Make minimized icon draggable
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        MinimizedIcon.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    MinimizedIcon.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MinimizedIcon.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    MinimizedIcon.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    return {
        MainFrame = MainFrame,
        TabFrame = TabFrame,
        ContentFrame = ContentFrame,
    }
end

-- แก้ไขฟังก์ชัน Xlib:Tab
function Xlib:Tab(name, parent, tabButtonName)
    local tabFrame = Instance.new("Frame")
    tabFrame.Name = name
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tabFrame.BackgroundTransparency = 1
    tabFrame.Visible = false
    tabFrame.Parent = parent

    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabButtonName
    tabButton.Size = UDim2.new(1, 0, 0, 50)
    tabButton.Text = name
    tabButton.Parent = parent

    tabButton.MouseButton1Click:Connect(function()
        for _, child in pairs(parent:GetChildren()) do
            if child:IsA("Frame") then
                child.Visible = false
            end
        end
        tabFrame.Visible = true
    end)

    return tabFrame
end

-- แก้ไขฟังก์ชัน Xlib:Button
function Xlib:Button(name, parent, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(1, 0, 0, 50)
    button.Text = name
    button.Parent = parent

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- แก้ไขฟังก์ชัน Xlib:Toggle
function Xlib:Toggle(name, parent, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = name
    toggleFrame.Size = UDim2.new(1, 0, 0, 50)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    toggleFrame.Parent = parent

    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0.5, 0, 1, 0)
    toggleButton.Text = "OFF"
    toggleButton.Parent = toggleFrame

    local toggleValue = false

    toggleButton.MouseButton1Click:Connect(function()
        toggleValue = not toggleValue
        toggleButton.Text = toggleValue and "ON" or "OFF"
        if callback then
            callback(toggleValue)
        end
    end)

    return toggleFrame
end

-- แก้ไขฟังก์ชัน Xlib:Slider
function Xlib:Slider(name, parent, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = name
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    sliderFrame.Parent = parent

    local sliderBar = Instance.new("Frame")
    sliderBar.Name = "SliderBar"
    sliderBar.Size = UDim2.new(1, 0, 0, 10)
    sliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    sliderBar.Position = UDim2.new(0, 0, 0.5, -5)
    sliderBar.Parent = sliderFrame

    local sliderKnob = Instance.new("Frame")
    sliderKnob.Name = "SliderKnob"
    sliderKnob.Size = UDim2.new(0, 20, 1, 0)
    sliderKnob.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderKnob.Position = UDim2.new(0, default, 0, 0)
    sliderKnob.Parent = sliderBar

    local dragging = false
    local function updateValue()
        local sliderWidth = sliderBar.AbsoluteSize.X
        local knobPosition = sliderKnob.Position.X.Offset
        local value = (knobPosition / sliderWidth) * (max - min) + min
        if callback then
            callback(value)
        end
    end

    sliderKnob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    sliderKnob.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    sliderFrame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = input.Position.X
            local knobX = math.clamp(mouseX - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            sliderKnob.Position = UDim2.new(0, knobX, 0, 0)
            updateValue()
        end
    end)

    return sliderFrame
end

-- ฟังก์ชัน Xlib:Keybind
function Xlib:Keybind(name, parent, callback)
    local keybindFrame = Instance.new("Frame")
    keybindFrame.Name = name
    keybindFrame.Size = UDim2.new(1, 0, 0, 50)
    keybindFrame.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    keybindFrame.Parent = parent

    local keybindButton = Instance.new("TextButton")
    keybindButton.Name = "KeybindButton"
    keybindButton.Size = UDim2.new(1, 0, 1, 0)
    keybindButton.Text = "Press Key"
    keybindButton.Parent = keybindFrame

    local UserInputService = game:GetService("UserInputService")

    local function onKeyPress(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode.Name
            keybindButton.Text = key
            if callback then
                callback(key)
            end
            UserInputService.InputBegan:Disconnect(onKeyPress)  -- Disconnect after key press
        end
    end

    keybindButton.MouseButton1Click:Connect(function()
        UserInputService.InputBegan:Connect(onKeyPress)
    end)

    return keybindFrame
end

-- ฟังก์ชัน Xlib:TextBox
function Xlib:TextBox(name, parent, placeholderText, callback)
    local textBoxFrame = Instance.new("Frame")
    textBoxFrame.Name = name
    textBoxFrame.Size = UDim2.new(1, 0, 0, 50)
    textBoxFrame.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    textBoxFrame.Parent = parent

    local textBox = Instance.new("TextBox")
    textBox.Name = "TextBox"
    textBox.Size = UDim2.new(1, 0, 1, 0)
    textBox.PlaceholderText = placeholderText
    textBox.Text = ""
    textBox.Parent = textBoxFrame

    local function onTextChanged()
        if callback then
            callback(textBox.Text)
        end
    end

    textBox.Changed:Connect(function(property)
        if property == "Text" then
            onTextChanged()
        end
    end)

    return textBoxFrame
end

-- ฟังก์ชัน Xlib:Notification
function Xlib:Notification(message, duration)
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(0.5, 0, 0.1, 0)
    notificationFrame.Position = UDim2.new(0.25, 0, 0.9, 0)
    notificationFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    notificationFrame.BackgroundTransparency = 0.5
    notificationFrame.BorderSizePixel = 0
    notificationFrame.Parent = game.Players.LocalPlayer.PlayerGui

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Text = message
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.BackgroundTransparency = 1
    textLabel.Parent = notificationFrame

    wait(duration)
    notificationFrame:Destroy()
end

return Xlib
