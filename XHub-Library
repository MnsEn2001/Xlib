local Xlib = {}
function Xlib:MakeWindow(config)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "Xlib_Gui"
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = MainFrame

    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.Text = config.Name or "Xlib UI"
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 18
    TitleLabel.Parent = TitleBar

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
    MinimizeButton.Position = UDim2.new(1, -55, 0, 5)
    MinimizeButton.Text = "<"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    MinimizeButton.Parent = TitleBar

    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -30, 0, 5)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.Parent = TitleBar

    local TabFrame = Instance.new("ScrollingFrame")
    TabFrame.Size = UDim2.new(0, 100, 1, -30)
    TabFrame.Position = UDim2.new(0, 0, 0, 30)
    TabFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabFrame.BorderSizePixel = 0
    TabFrame.ScrollBarThickness = 5
    TabFrame.Parent = MainFrame

    local ContentFrame = Instance.new("ScrollingFrame")
    ContentFrame.Size = UDim2.new(1, -100, 1, -30)
    ContentFrame.Position = UDim2.new(0, 100, 0, 30)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ContentFrame.BorderSizePixel = 0
    ContentFrame.ScrollBarThickness = 5
    ContentFrame.Parent = MainFrame

    -- Create minimized icon
    local MinimizedIcon = Instance.new("TextButton")
    MinimizedIcon.Size = UDim2.new(0, 50, 0, 50)
    MinimizedIcon.Position = UDim2.new(0, 10, 0, 10)
    MinimizedIcon.Text = "> XHub <"
    MinimizedIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizedIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MinimizedIcon.Visible = false
    MinimizedIcon.Active = true
    MinimizedIcon.Draggable = true
    MinimizedIcon.Parent = ScreenGui

    -- Minimize and restore functions
    local function minimizeWindow()
        MainFrame.Visible = false
        MinimizedIcon.Visible = true
    end

    local function restoreWindow()
        MainFrame.Visible = true
        MinimizedIcon.Visible = false
    end

    local function closeWindow()
        ScreenGui:Destroy()
    end

    MinimizeButton.MouseButton1Click:Connect(minimizeWindow)
    MinimizedIcon.MouseButton1Click:Connect(restoreWindow)
    CloseButton.MouseButton1Click:Connect(closeWindow)

    -- Make minimized icon draggable
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        MinimizedIcon.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    MinimizedIcon.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MinimizedIcon.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    MinimizedIcon.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    return {
        MainFrame = MainFrame,
        TabFrame = TabFrame,
        ContentFrame = ContentFrame,
    }
end

-- Function to create tabs
function Xlib:MakeTab(config)
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(1, 0, 0, 30)
    TabButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TabButton.Text = config.Name
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Font = Enum.Font.Gotham
    TabButton.TextSize = 14
    TabButton.Parent = config.Parent.TabFrame

    local UIListLayout = config.Parent.TabFrame:FindFirstChildOfClass("UIListLayout")
    if not UIListLayout then
        UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = config.Parent.TabFrame
    end

    local ToggleContainer = Instance.new("Frame")
    ToggleContainer.Size = UDim2.new(1, 0, 1, 0)
    ToggleContainer.BackgroundTransparency = 1
    ToggleContainer.Parent = config.Parent.ContentFrame
    ToggleContainer.Visible = false

    TabButton.MouseButton1Click:Connect(function()
        for _, child in pairs(config.Parent.ContentFrame:GetChildren()) do
            if child:IsA("Frame") then
                child.Visible = false
            end
        end
        ToggleContainer.Visible = true

        -- Reset the UIListLayout to update with new children
        UIListLayout:Apply(config.Parent.ContentFrame:GetChildren())
    end)

    return {
        ToggleContainer = ToggleContainer
    }
end

-- Function to create buttons
function Xlib:MakeButton(config)
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, -20, 0, 30)
    Button.Position = UDim2.new(0, 10, 0, (#config.Parent.ToggleContainer:GetChildren()) * 40)
    Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Button.Text = config.Name
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 14
    Button.Parent = config.Parent.ToggleContainer

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Button

    Button.MouseButton1Click:Connect(function()
        if config.Callback then
            config.Callback()
        end
    end)
end

-- Function to create toggles
function Xlib:MakeToggle(config)
    local Toggle = Instance.new("Frame")
    Toggle.Size = UDim2.new(1, -20, 0, 30)
    Toggle.Position = UDim2.new(0, 10, 0, (#config.Parent.ToggleContainer:GetChildren()) * 40)
    Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Toggle.Parent = config.Parent.ToggleContainer

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Toggle

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 20, 0, 20)
    ToggleButton.Position = UDim2.new(1, -30, 0.5, -10)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    ToggleButton.Text = ""
    ToggleButton.Parent = Toggle

    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Size = UDim2.new(1, -40, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 10, 0, 0)
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Text = config.Name
    ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.TextSize = 14
    ToggleLabel.Parent = Toggle

    local toggled = false

    ToggleButton.MouseButton1Click:Connect(function()
        toggled = not toggled
        if toggled then
            ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            if config.Callback then
                config.Callback(true)
            end
        else
            ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            if config.Callback then
                config.Callback(false)
            end
        end
    end)
end

function Xlib:MakeDropdown(config)
    local Dropdown = Instance.new("Frame")
    Dropdown.Size = UDim2.new(1, -20, 0, 30)
    Dropdown.Position = UDim2.new(0, 10, 0, (#config.Parent.ToggleContainer:GetChildren()) * 40)
    Dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Dropdown.ZIndex = 1
    Dropdown.Parent = config.Parent.ToggleContainer

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Dropdown

    local DropdownLabel = Instance.new("TextLabel")
    DropdownLabel.Size = UDim2.new(1, -40, 1, 0)
    DropdownLabel.Position = UDim2.new(0, 10, 0, 0)
    DropdownLabel.Text = config.Name
    DropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownLabel.BackgroundTransparency = 1
    DropdownLabel.Font = Enum.Font.Gotham
    DropdownLabel.TextSize = 14
    DropdownLabel.ZIndex = 1
    DropdownLabel.Parent = Dropdown

    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Size = UDim2.new(0, 20, 0, 20)
    DropdownButton.Position = UDim2.new(1, -30, 0.5, -10)
    DropdownButton.Text = "v"
    DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    DropdownButton.ZIndex = 1
    DropdownButton.Parent = Dropdown

    local OptionsFrame = Instance.new("ScrollingFrame")
    OptionsFrame.Size = UDim2.new(1, 0, 0, math.min(#config.Options * 30, 150)) -- Limit height to 150 pixels
    OptionsFrame.Position = UDim2.new(0, 0, 1, 0)
    OptionsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    OptionsFrame.Visible = false
    OptionsFrame.ZIndex = 2
    OptionsFrame.CanvasSize = UDim2.new(0, 0, 0, #config.Options * 30)
    OptionsFrame.ScrollBarThickness = 5
    OptionsFrame.Parent = Dropdown

    local function toggleOptions()
        OptionsFrame.Visible = not OptionsFrame.Visible
    end

    DropdownButton.MouseButton1Click:Connect(toggleOptions)

    for i, option in ipairs(config.Options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Size = UDim2.new(1, -20, 0, 30)
        OptionButton.Position = UDim2.new(0, 10, 0, (i - 1) * 30)
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        OptionButton.ZIndex = 2
        OptionButton.Parent = OptionsFrame

        OptionButton.MouseButton1Click:Connect(function()
            DropdownLabel.Text = option
            config.Callback(option)
            OptionsFrame.Visible = false
        end)
    end

    return {
        Dropdown = Dropdown,
        DropdownButton = DropdownButton,
        OptionsFrame = OptionsFrame
    }
end

function Xlib:MakeTextBox(config)
    -- สร้าง TextBox Frame
    local TextBoxFrame = Instance.new("Frame")
    TextBoxFrame.Size = UDim2.new(1, -20, 0, 50)
    TextBoxFrame.Position = UDim2.new(0, 10, 0, (#config.Parent.ToggleContainer:GetChildren()) * 60)
    TextBoxFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TextBoxFrame.Parent = config.Parent.ToggleContainer

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = TextBoxFrame

    -- สร้าง Label
    local TextBoxLabel = Instance.new("TextLabel")
    TextBoxLabel.Size = UDim2.new(1, -40, 0, 20)
    TextBoxLabel.Position = UDim2.new(0, 10, 0, 5)
    TextBoxLabel.Text = config.Name
    TextBoxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextBoxLabel.BackgroundTransparency = 1
    TextBoxLabel.Font = Enum.Font.Gotham
    TextBoxLabel.TextSize = 14
    TextBoxLabel.Parent = TextBoxFrame

    -- สร้าง TextBox
    local TextBox = Instance.new("TextBox")
    TextBox.Size = UDim2.new(1, -20, 0, 30)
    TextBox.Position = UDim2.new(0, 10, 0, 25)
    TextBox.BackgroundColor3 = Color3.fromRGB(200, 200, 200)  -- สีพื้นหลังจางลง
    TextBox.TextColor3 = Color3.fromRGB(50, 50, 50)           -- สีตัวอักษรจางลง
    TextBox.Font = Enum.Font.Gotham
    TextBox.TextSize = 14
    TextBox.ClearTextOnFocus = false
    TextBox.Text = config.Default or ""
    TextBox.Parent = TextBoxFrame

    -- ตั้งค่าฟังก์ชัน Callback
    TextBox.FocusLost:Connect(function(enterPressed)
        if enterPressed and config.Callback then
            config.Callback(TextBox.Text)
        end
    end)

    return {
        TextBoxFrame = TextBoxFrame,
        TextBox = TextBox
    }
end

function Xlib:MakeLabel(config)
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(1, -20, 0, 30)
    Label.Position = UDim2.new(0, 10, 0, (#config.Parent.ToggleContainer:GetChildren()) * 40)
    Label.BackgroundTransparency = 1  -- ทำให้พื้นหลังโปร่งใส
    Label.Text = config.Text or "Label"
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.Font = Enum.Font.Gotham
    Label.TextSize = 14
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.TextYAlignment = Enum.TextYAlignment.Center
    Label.Parent = config.Parent.ToggleContainer

    return Label
end

function Xlib:MakeNotification(config)
    -- สร้าง Notification Frame
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(0.3, 0, 0.1, 0)
    notificationFrame.Position = UDim2.new(0.35, 0, 0.05, 0) -- Adjust position as needed
    notificationFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    notificationFrame.BackgroundTransparency = 0.5
    notificationFrame.BorderSizePixel = 0
    notificationFrame.Parent = config.Parent

    -- Create UICorner for rounded corners
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = notificationFrame

    -- Create title label
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = config.Title or "Title"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.Parent = notificationFrame

    -- Create message label
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, 0, 0, 60)
    messageLabel.Position = UDim2.new(0, 0, 0, 30)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = config.Message or "Message"
    messageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextSize = 14
    messageLabel.TextWrapped = true
    messageLabel.Parent = notificationFrame

    -- ฟังก์ชันสำหรับการจางหายไป
    local function fadeOut()
        for i = 0, 1, 0.1 do
            notificationFrame.BackgroundTransparency = 0.5 + i * 0.5
            titleLabel.TextTransparency = i
            messageLabel.TextTransparency = i
            wait(0.1)
        end
        notificationFrame:Destroy()
    end

    -- ซ่อนการแจ้งเตือนหลังจากระยะเวลาที่กำหนด
    delay(config.Duration or 3, fadeOut)

    -- ฟังก์ชันสำหรับการแสดงการแจ้งเตือน
    local function showNotification()
        notificationFrame.Visible = true
        fadeOut()
    end

    -- แสดงการแจ้งเตือนเมื่อสร้างถ้าตั้งค่าไว้
    if config.ShowOnCreate then
        showNotification()
    end

    return {
        NotificationFrame = notificationFrame,
        Show = showNotification,
    }
end

return Xlib
